{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\Study\\\\Degree\\\\Second Year\\\\First Sem\\\\OOP(Programming)\\\\CW\\\\Front-End (UI)\\\\ticket-system\\\\src\\\\layout\\\\SelectConfigure.js\",\n  _s = $RefreshSig$();\nimport { Paper } from '@mui/material';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfigurationLoader = () => {\n  _s();\n  const [fileName, setFileName] = useState('');\n  const [configuration, setConfiguration] = useState(null);\n  const [error, setError] = useState('');\n  const handleInputChange = event => {\n    setFileName(event.target.value);\n  };\n  const paperstyle = {\n    padding: \"100px 50px\",\n    width: 600,\n    margin: \"20px auto\"\n  };\n  const loadConfiguration = async () => {\n    if (!fileName) {\n      setError('Please enter a file name.');\n      return;\n    }\n    try {\n      const response = await fetch(`/api/configurations/load?fileName=${fileName}`);\n      if (!response.ok) {\n        throw new Error('Failed to load configuration');\n      }\n      const data = await response.json();\n      setConfiguration(data);\n      setError('');\n    } catch (err) {\n      setError(`Error: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: paperstyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Load Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: fileName,\n        onChange: handleInputChange,\n        placeholder: \"Enter JSON file name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadConfiguration,\n        children: \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }, this), configuration && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Configuration Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(configuration, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigurationLoader, \"bQqvLufYMxeKvC7boNAXZQFxVfA=\");\n_c = ConfigurationLoader;\nexport default ConfigurationLoader;\nvar _c;\n$RefreshReg$(_c, \"ConfigurationLoader\");","map":{"version":3,"names":["Paper","React","useState","jsxDEV","_jsxDEV","ConfigurationLoader","_s","fileName","setFileName","configuration","setConfiguration","error","setError","handleInputChange","event","target","value","paperstyle","padding","width","margin","loadConfiguration","response","fetch","ok","Error","data","json","err","message","children","elevation","style","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","color","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/study/Study/Degree/Second Year/First Sem/OOP(Programming)/CW/Front-End (UI)/ticket-system/src/layout/SelectConfigure.js"],"sourcesContent":["import { Paper } from '@mui/material';\r\nimport React, { useState } from 'react';\r\n\r\nconst ConfigurationLoader = () => {\r\n  const [fileName, setFileName] = useState('');\r\n  const [configuration, setConfiguration] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    setFileName(event.target.value);\r\n  };\r\n  const paperstyle ={padding:\"100px 50px\", width:600, margin:\"20px auto\"}\r\n  const loadConfiguration = async () => {\r\n    if (!fileName) {\r\n      setError('Please enter a file name.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`/api/configurations/load?fileName=${fileName}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to load configuration');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setConfiguration(data);\r\n      setError('');\r\n    } catch (err) {\r\n      setError(`Error: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <Paper elevation={3} style={paperstyle}>\r\n            <h3>Load Configuration</h3>\r\n            <input\r\n                type=\"text\"\r\n                value={fileName}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter JSON file name\"\r\n            />\r\n            <button onClick={loadConfiguration}>Load</button>\r\n\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            {configuration && (\r\n                <div>\r\n                <h4>Configuration Data:</h4>\r\n                <pre>{JSON.stringify(configuration, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </Paper>    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigurationLoader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}